# 知识农场-设计文档

## 背景  
现在大学部分课程没有与实际授课严格配套的课本，或者有些课本知识过于细致，导致内容冗长，不适合敏捷学习或快速查阅。大学生的纸质课堂笔记离散易失且不易保存查阅，且结构不够统一。当然现在也有很多优秀的笔记软件，但我认为自定义性不强。  
如果有一种软件，可以更简略的记录每门课程的每一节课老师讲授的知识脉络中的每一个节点，并可以供我们不断去回顾和丰富，且提供一种类似游戏一样的激励机制、任务管理机制，且有日程管理、复习进度管理、遗忘曲线控制等功能。将每个知识点对象化，对每个知识点都可以打开消息窗口，记录你不同阶段对同一知识点的疑问或理解。  
相信这种软件可以更好的记录管理我们所学知识，让每一节课具象化，可视化的了解自己每节课的收获，甚至直观了解自己的知识体系。根据遗忘曲线的设定，估计对每一个知识点的残留记忆，能够更好的指导我们温故知新，让知识能“学的进，留得住”。

## 目标
1. 更简洁、全面的记录每一节课的知识脉络。（简洁指的是对老师讲授的单个知识点的浓缩，全面指的是涵盖老师提到的所有知识点）
2. 能对每个知识点进行补充。（记录自己复习的过程、后期理解加深的过程、对该知识点的进一步疑问）
3. 以直观量化、隐含激励效果的形式展示对每个知识点的掌握程度。（可以对每个知识点附带的聊天窗的打开时间计时，对消息数目的记录，合理的量化函数，考虑历史操作时间与遗忘曲线）
4. 设计复习模式，能对前期记录的知识点进行合理遍历。（通过不同的复习方式，使用户更好更愉快的温习之前的知识点）
5. 设计知识广场，可以相互分享知识图谱。（一个知识图谱不仅含有该门知识有哪些知识点，还含有该门知识的实际学习路线是怎样的，他人在学习过程中都产生了什么心得）
6. 知识图谱的多人协作管理，发掘软件的其他用法。
7. 职业设计，为迈入各种职业提供规划。（通过知识图谱的打包，以及知识图谱间的学习顺序，来进行对一个职业所需的知识储备进行量化）
8. 日程管理，通过编辑日历，更有效的管理自己的时间。（日历可以与知识图谱进行映射，进行学习量化）
9. 建立与管理Flag。（可以开辟自定义天数的Flag并映射到日历与知识图谱中，可以督促Flag的进行并记录Flag的各阶段完成详情）

## 功能
1. 知识农场结构化的建立，每门课抽象成一个农场，每节课抽象成一块农田，一节课内的知识点为抽象成树状结构。农场有私密、可见、可复制等权限管理。
2. 农场的分类，类似于文件夹分类一样，类似于文化课、美术、体育这种更高一层的分类管理。
3. 每个知识点抽象成好友，可触发对应的聊天窗口，分类记录详解、问题、心得等。
4. 复习模式的设计：层次遍历法复习、先序遍历复习法、中序遍历复习法、后序遍历复习法、随机验证复习法等，复习内容有知识点概要、知识点聊天内容，具体设计需要下功夫。
5. 为农场、农田、知识点建立经验条模型，记录灌溉情况（学习）、干旱情况（遗忘）。
6. 职业规划书的建立，可以包含多个农场，职业规划书权限的设置。
7. 市场的建立，分类显示各种用户设置为可见、可复制的农场与职业规划书。
8. 农场的copy与收藏，copy之后会存到自己的数据库可以进行后续更改，收藏之后，只能查看不能更改。可以开发交易功能。
9. 日历的构建，按周进行显示，提供单双周设置，时间段长度自定义分配。
10. Flag计划的构建，映射到日历，映射到农场，每一次的Flag执行可抽象为一块农田，Flag执行内容靠用户以知识点的形式进行记录。提供计时功能。Flag进度条显示。可以开发上缴保证金激励功能。
11. 个人信息更改，app主题更换。
12. 积分系统。

## 工作流程
1. 产品思考
2. 产品原型图手稿绘制
3. UI/UX稿软件绘制
4. APP视图层代码编写，实现UI/UX稿 | Presentation tier
5. 数据库按UI/UX稿进行设计 | Data tier
6. API按APP页面与数据库进行设计
7. APP数据层逻辑层代码编写，对接API

## 工具选择
1. 手稿绘制：notability
2. UI/UX稿软件绘制：Axure
3. APP视图层、数据层、逻辑层代码编写：flutter、dart、vscode
4. 数据库设计：dbdiagram.io 进行数据库建模可生成DDL语言、、mysql、navicat
5. 后台：django、python、pycharm
6. 服务器：阿里云、centos7、docker、nginx
7. 代码管理：GitHub

## code Review
1. 编写新代码时，创建新的 Branch A
2. 提交代码时，使用 pull Request 到 Master Branch
3. Code Review：比较 Master Branch 和 Branch A
4. 合并代码，删除 Branch A

