# 项目背景

现在大学部分课程没有与实际授课严格配套的课本，或者有些课本知识过于细致，导致内容冗长，不适合敏捷学习或快速查阅。大学生的纸质课堂笔记离散易失且不易保存查阅，且结构不够统一。当然现在也有很多优秀的笔记软件，但我认为自定义性不强。  
如果有一种软件，可以更简略的记录每门课程的每一节课老师讲授的知识脉络中的每一个节点，并可以供我们不断去回顾和丰富，且提供一种类似游戏一样的激励机制、任务管理机制，且有日程管理、复习进度管理、遗忘曲线控制等功能。将每个知识点对象化，对每个知识点都可以打开消息窗口，记录你不同阶段对同一知识点的疑问或理解。  
相信这种软件可以更好的记录管理我们所学知识，让每一节课具象化，可视化的了解自己每节课的收获，甚至直观了解自己的知识体系。根据遗忘曲线的设定，估计对每一个知识点的残留记忆，能够更好的指导我们温故知新，让知识能“学的进，留得住”。

# 项目结构



# 项目用到的技术

* flutter 跨平台移动开发框架
* dart 一种既可以编译也可以解释的语言
* django 后端框架
* python 用来写django
* mysql 数据库管理系统
* git 代码版本控制
* centos 阿里云服务器部署后端

开发理念：

* DAO 数据持久化（本地缓存）
* BLoC 业务逻辑组件，使视图和控制分离
* Redux 全局状态管理
* ORM 对象关系映射，不直接写sql语句，像操作对象一样操作数据库

用到的包

* dio http数据通信，用于移动端和后台数据通信
* shared_preferences 本地缓存
* json_annotation json序列化，通过字符串得到对象，类似于java的反射



# 项目完成度

代码量：





# 项目展望

